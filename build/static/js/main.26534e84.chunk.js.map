{"version":3,"sources":["functions/fetchFunctions.js","components/TableHeaderSingleTD.jsx","components/TableHeader.jsx","components/TableSingleRow.jsx","components/TableRows.jsx","components/TableFilter.jsx","components/TablePagination.jsx","components/InfoDetails.jsx","components/Modal.jsx","components/AddNewForm.jsx","components/AddNewRow.jsx","functions/table-functions.js","components/Table.jsx","components/TableApp.jsx","components/AppMain.jsx","index.js","config.js"],"names":["require","SMALL_SET","urlAPI","fetchData","a","set","fetch","responce","ok","Error","json","data","console","warn","message","TableHeaderSingleTD","props","h","sortingType","onSortFieldSelect","sortTypeClass","field","reversed","key","onClick","className","TableHeader","tableheaders","map","TableSingleRow","row","setSelectedRow","setIsDetailsVisible","id","firstName","lastName","email","phone","defaultProps","TableRows","list","shortid","generate","TableFilter","onSearchHandler","searchWord","setSearchWord","setSortedList","sortByField","onChange","e","target","value","type","name","placeholder","xmlns","viewBox","width","fill","d","TablePagination","listLength","currentPage","setCurrentPage","pages","Math","ceil","pageChangeHandler","InfoDetails","selectedRow","Object","keys","length","readOnly","description","address","streetAddress","city","state","zip","Modal","toggleModal","children","AddNewForm","useState","newUser","setNewUser","isValid","setIsValid","formValidator","useCallback","validator","isNumeric","isEmpty","isEmail","onInputChange","useEffect","pattern","disabled","AddNewRow","showModal","setShowModal","arr","order","result","sort","b","toLowerCase","reverse","searchInObject","phrase","defaultList","firstInARow","keysArray","filter","includes","Table","setSortingType","sortedList","isDetailsVisible","resetDetails","offset","newField","slice","TableApp","setList","isFetching","setIsFetching","getList","newList","color","height","AppMain","selectedData","setSelectedData","onRAdioHandler","htmlFor","LARGE_SET","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26534e84.chunk.js","sourcesContent":["const { SMALL_SET, urlAPI } = require(\"../config\");\n\nexport const fetchData = async (set = SMALL_SET) => {\n  try {\n    const responce = await fetch(urlAPI[set]);\n    if (!responce.ok) {\n      throw new Error('Something went wrong');\n    } \n    const data = await responce.json();\n    return data;\n  }  catch (err) {\n    console.warn(err.message);\n  }\n\n}","import React from \"react\";\n\nfunction TableHeaderSingleTD(props) {\n  const { h, sortingType, onSortFieldSelect } = props;\n  const sortClassName = () => {\n    if (h === sortingType.field) {\n      return sortingType.reversed ? 'active-sort--reversed' : 'active-sort'\n    }\n    return null\n  }\n  const sortTypeClass =sortClassName();\n  return (\n    <td key={h} onClick={() => onSortFieldSelect(h)}>\n      <p className={sortTypeClass}>{h}</p>\n    </td>\n  );\n}\n\nexport default TableHeaderSingleTD;\n","import React from \"react\";\nimport { tableheaders } from \"../config\";\nimport TableHeaderSingleTD from \"./TableHeaderSingleTD\";\n\nfunction TableHeader(props) {\n  const { sortingType, onSortFieldSelect } = props;\n\n  return (\n    <thead className=\"main-table__header\">\n      <tr>\n        {tableheaders.map((h) => (\n          <TableHeaderSingleTD\n          key={h}\n            h={h}\n            sortingType={sortingType}\n            onSortFieldSelect={onSortFieldSelect}\n          />\n        ))}\n      </tr>\n    </thead>\n  );\n}\n\nexport default TableHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction TableSingleRow(props) {\n  const { row, setSelectedRow, setIsDetailsVisible } = props;\n\n  const onRowClickHandler = () => {\n    setSelectedRow(row);\n    setIsDetailsVisible(true);\n  };\n\n  return (\n    <tr onClick={onRowClickHandler} className=\"main-table__row\">\n      <td>{row.id}</td>\n      <td>{row.firstName}</td>\n      <td>{row.lastName}</td>\n      <td>{row.email}</td>\n      <td>{row.phone}</td>\n    </tr>\n  );\n}\n\nTableSingleRow.defaultProps = {\n  row: {},\n};\n\nTableSingleRow.propTypes = {\n  row: PropTypes.shape({\n    id: PropTypes.number,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    email: PropTypes.string,\n    phone: PropTypes.string,\n    address: PropTypes.shape({\n      streetAddress: PropTypes.string,\n      city: PropTypes.string,\n      state: PropTypes.string,\n      zip: PropTypes.string,\n    }),\n    description: PropTypes.string,\n  }),\n  setSelectedRow: PropTypes.func.isRequired,\n  setIsDetailsVisible: PropTypes.func.isRequired,\n};\n\nexport default TableSingleRow;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\nimport TableSingleRow from \"./TableSingleRow\";\n\nfunction TableRows(props) {\n  const { list, setSelectedRow, setIsDetailsVisible } = props;\n  return (\n    <tbody>\n      {list.map((row) => (\n        <TableSingleRow\n          key={shortid.generate()}\n          row={row}\n          setSelectedRow={setSelectedRow}\n          setIsDetailsVisible={setIsDetailsVisible}\n        />\n      ))}\n    </tbody>\n  );\n}\n\nTableRows.defaultProps = {\n  list: [],\n};\n\nTableRows.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.object),\n  setSelectedRow: PropTypes.func.isRequired,\n  setIsDetailsVisible: PropTypes.func.isRequired,\n};\n\nexport default TableRows;\n","import React from \"react\";\n\nfunction TableFilter(props) {\n  const {\n    onSearchHandler,\n    searchWord,\n    setSearchWord,\n    setSortedList,\n    list,\n    sortByField,\n  } = props;\n\n  const onInputChange = (e) => {\n    setSearchWord(e.target.value);\n    if (e.target.value === \"\") {\n      setSortedList(sortByField(onSearchHandler(\"\", list), \"id\"));\n    }\n  };\n\n  const findButtonClickHandler = () => {\n    setSortedList(sortByField(onSearchHandler(searchWord, list), \"id\"));\n  };\n\n  return (\n    <div className=\"filter-block\">\n      <input\n        onChange={onInputChange}\n        type=\"search\"\n        name=\"search-field\"\n        id=\"table-search\"\n        placeholder=\"фильтр...\"\n        className=\"filter-block__input\"\n      />\n      <button\n        type=\"button\"\n        onClick={findButtonClickHandler}\n        className=\"filter-block__button\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 512 512\"\n          width=\"30\"\n          fill=\"#ffffff\">\n          <path\n            d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 \n            44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 \n            208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 \n            99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 \n            336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 \n            128 57.2 128 128 0 70.7-57.2 128-128 128z\"\n          />\n        </svg>\n      </button>\n    </div>\n  );\n}\n\nexport default TableFilter;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nfunction TablePagination(props) {\n  const { listLength, currentPage, setCurrentPage } = props;\n  const pages = Math.ceil(listLength / 50);\n\n  const pageChangeHandler = (e) => {\n    if (e.target.name === \"back\" && currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n    if (e.target.name === \"forward\" && currentPage < pages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  return (\n    <div>\n      <table className=\"pagination-container\">\n        <tbody>\n          <tr>\n            <td>\n              {currentPage !== 1 ? (\n                <>\n                  <span>1</span>\n                  <button\n                    type=\"button\"\n                    name=\"back\"\n                    className=\"TablePagination__button TablePagination__button--back\"\n                    onClick={pageChangeHandler}\n                  />\n                </>\n              ) : null}\n            </td>\n            <td>\n              <span>{currentPage}</span>\n            </td>\n            <td>\n              {currentPage !== pages ? (\n                <span>\n                  <button\n                    type=\"button\"\n                    name=\"forward\"\n                    className=\"TablePagination__button TablePagination__button--forward\"\n                    onClick={pageChangeHandler}\n                  />\n                  <span>{pages}</span>\n                </span>\n              ) : null}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nTablePagination.propTypes = {\n  listLength: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  setCurrentPage: PropTypes.func.isRequired,\n}\n\n\n\nexport default TablePagination;\n\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction InfoDetails(props) {\n  const { selectedRow } = props;\n\n  if (!selectedRow || Object.keys(selectedRow).length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"details-block\">\n      <div className=\"details-block__content\">\n        <p>\n          Выбран пользователь{\" \"}\n          <b>{`${selectedRow.firstName} ${selectedRow.lastName}`}</b>\n        </p>\n        <p>Описание:</p>\n        <textarea readOnly value={selectedRow.description} />\n        <p>\n          Адрес проживания: <b>{selectedRow.address.streetAddress}</b>\n        </p>\n        <p>\n          Город: <b>{selectedRow.address.city}</b>\n        </p>\n        <p>\n          Провинция/штат: <b>{selectedRow.address.state}</b>\n        </p>\n        <p>\n          Индекс: <b>{selectedRow.address.zip}</b>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nInfoDetails.defaultProps = {\n  selectedRow: {},\n};\n\nInfoDetails.propTypes = {\n  selectedRow: PropTypes.shape({\n    id: PropTypes.number,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    email: PropTypes.string,\n    phone: PropTypes.string,\n    address: PropTypes.shape({\n      streetAddress: PropTypes.string,\n      city: PropTypes.string,\n      state: PropTypes.string,\n      zip: PropTypes.string,\n    }),\n    description: PropTypes.string,\n  }),\n};\n\nexport default InfoDetails;\n","import React from \"react\";\n\nfunction Modal(props) {\n  const { toggleModal } = props;\n  return (\n    <div className=\"modal\">\n      <div className=\"modal_background\" />\n      <div className=\"modal_content\">\n        {props.children}\n        <button\n          className=\"btn modal__button\"\n          type=\"button\"\n          onClick={toggleModal}>\n          Закрыть\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport validator from \"validator\";\n\nfunction AddNewForm() {\n  const [newUser, setNewUser] = useState({\n    id: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n  });\n\n  const [isValid, setIsValid] = useState(false);\n\n  const formValidator = useCallback(() => {\n    if (!validator.isNumeric(newUser.id)) return false;\n    if (!validator.isEmpty(newUser.firstName)) return false;\n    if (!validator.isEmpty(newUser.lastName)) return false;\n    if (!validator.isEmail(newUser.email)) return false;\n    return true;\n  }, [newUser]);\n\n  const onInputChange = (e) => {\n    setNewUser({ ...newUser, [e.target.name]: e.target.value });\n  };\n\n  useEffect(() => {\n    setIsValid(formValidator());\n  }, [newUser, formValidator]);\n\n  return (\n    <div className=\"new-user\">\n      <h2 className=\"new-user__title\">Добавление нового пользователя</h2>\n      <form className=\"new-user__form\">\n        <input\n          onChange={onInputChange}\n          type=\"number\"\n          name=\"id\"\n          placeholder=\"id\"\n          className=\"new-user__input\"\n        />\n        <input\n          onChange={onInputChange}\n          type=\"text\"\n          name=\"firstname\"\n          placeholder=\"firstname\"\n          className=\"new-user__input\"\n        />\n        <input\n          onChange={onInputChange}\n          type=\"text\"\n          name=\"lastname\"\n          placeholder=\"lastname\"\n          className=\"new-user__input\"\n        />\n        <input\n          onChange={onInputChange}\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"email\"\n          className=\"new-user__input\"\n        />\n        <input\n          onChange={onInputChange}\n          type=\"tel\"\n          name=\"phone\"\n          placeholder=\"(000)000-0000\"\n          pattern=\"\\([0-9]{3}\\)[0-9]{3}-[0-9]{4}\"\n          className=\"new-user__input\"\n        />\n        <button disabled={!isValid} type=\"submit\" className=\"btn\">\n          Добавить в таблицу\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddNewForm;\n","import React, { useState } from \"react\";\nimport Modal from \"./Modal\";\nimport AddNewForm from \"./AddNewForm\";\n\nfunction AddNewRow() {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return (\n    <div>\n      <button type=\"button\" onClick={toggleModal} className=\"btn\">\n        Добавить\n      </button>\n      {showModal ? (\n        <Modal toggleModal={toggleModal}>\n          <AddNewForm />\n        </Modal>\n      ) : null}\n    </div>\n  );\n}\n\nexport default AddNewRow;\n","export const sortByField = (arr, field, order = false) => {\n  const result = [...arr].sort((a, b) => {\n    if (typeof a[field] === \"string\") {\n      return a[field].toLowerCase() > b[field].toLowerCase() ? 1 : -1;\n    }\n    return a[field] > b[field] ? 1 : -1;\n  });\n  if (order) {\n    return result.reverse();\n  }\n  return result;\n};\n\nexport const searchInObject = (phrase, defaultList = []) => {\n  const [...firstInARow] = defaultList;\n  const keysArray = Object.keys(firstInARow);\n  if (keysArray.length === 0) {\n    return [];\n  }\n  if (typeof phrase !== 'string') {\n    return [];\n  }\n  if (phrase === \"\") {\n    return defaultList;\n  }\n  const result = defaultList.filter((row) => {\n      const rowKeys = Object.keys(row);\n      const resultArray = rowKeys.filter((key) => {\n        if (typeof key === 'string' && typeof row[key] === 'string') {\n          return row[key].toLowerCase().includes(phrase.toLowerCase())\n        }\n        return false;\n      })\n      return resultArray.length > 0;\n  });\n  return result;\n};","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableHeader from \"./TableHeader\";\nimport TableRows from \"./TableRows\";\nimport TableFilter from \"./TableFilter\";\nimport TablePagination from \"./TablePagination\";\nimport InfoDetails from \"./InfoDetails\";\nimport AddNewRow from \"./AddNewRow\";\nimport { searchInObject, sortByField } from \"../functions/table-functions\";\n\nfunction Table(props) {\n  const { list } = props;\n  const [sortingType, setSortingType] = useState({\n    field: \"id\",\n    reversed: false,\n  });\n  const [sortedList, setSortedList] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchWord, setSearchWord] = useState(\"\");\n  const [isDetailsVisible, setIsDetailsVisible] = useState(false);\n  const [selectedRow, setSelectedRow] = useState({});\n\n  const resetDetails = () => {\n    setIsDetailsVisible(false);\n    setSelectedRow({});\n  };\n\n  const onSortFieldSelect = (newField) => {\n    if (newField === sortingType.field) {\n      return setSortingType({\n        ...sortingType,\n        reversed: !sortingType.reversed,\n      });\n    }\n    resetDetails();\n    return setSortingType({ field: newField, reversed: false });\n  };\n\n  useEffect(() => {\n    resetDetails();\n    setCurrentPage(1);\n    setSortedList(sortByField(list, sortingType.field, sortingType.reversed));\n  }, [list, sortingType.field, sortingType.reversed]);\n\n  const returnListPart = (offset) => {\n    return sortedList.slice((offset - 1) * 50, (offset - 1) * 50 + 50);\n  };\n\n  return (\n    <>\n      <TableFilter\n        list={list}\n        sortByField={sortByField}\n        onSearchHandler={searchInObject}\n        searchWord={searchWord}\n        setSearchWord={setSearchWord}\n        setSortedList={setSortedList}\n      />\n      <AddNewRow />\n      <TablePagination\n        listLength={sortedList.length}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n      />\n      <table className=\"main-table\">\n        <TableHeader\n          sortingType={sortingType}\n          onSortFieldSelect={onSortFieldSelect}\n        />\n        <TableRows\n          list={returnListPart(currentPage)}\n          setSelectedRow={setSelectedRow}\n          setIsDetailsVisible={setIsDetailsVisible}\n        />\n      </table>\n      <TablePagination\n        listLength={sortedList.length}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n      />\n      {isDetailsVisible ? <InfoDetails selectedRow={selectedRow} /> : null}\n    </>\n  );\n}\n\nTable.defaultProps = {\n  list: [],\n};\n\nTable.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Table;\n","import React, { useEffect, useState } from \"react\";\nimport { fetchData } from \"../functions/fetchFunctions\";\nimport Table from \"./Table\";\nimport { useCallback } from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nfunction TableApp(props) {\n  const { set } = props;\n  const [list, setList] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n\n  const getList = useCallback(async () => {\n    setIsFetching(true);\n    const newList = await fetchData(set);\n    setList(newList);\n    setIsFetching(false);\n  }, [set]);\n\n  useEffect(() => {\n    getList();\n  }, [getList]);\n\n  return (\n    <>\n      {isFetching ? (\n        <div className=\"loader-container\">\n          <h3>Пожалуйста, подождите...</h3>\n          <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\n        </div>\n      ) : (\n        <Table list={list} />\n      )}\n    </>\n  );\n}\n\nexport default TableApp;\n","import React, { useState } from \"react\";\nimport { SMALL_SET, LARGE_SET } from \"../config\";\nimport TableApp from \"./TableApp\";\n\nfunction AppMain() {\n  const [selectedData, setSelectedData] = useState(null);\n\n  const onRAdioHandler = (e) => {\n    setSelectedData(e.target.value);\n  };\n\n  return (\n    <>\n      {selectedData === null ? (\n        <div className=\"welcom-form\">\n          <h1>Выберите объем загружаемых данных</h1>\n          <form className=\"data-select-form\">\n            <label htmlFor=\"small\" className=\"btn\">\n              Малый объем\n              <input\n                type=\"radio\"\n                name=\"dataSelect\"\n                id=\"small\"\n                value={SMALL_SET}\n                onClick={onRAdioHandler}\n                className=\"data-select-form__radiobutton\"\n              />\n            </label>\n            <label htmlFor=\"large\" className=\"btn\">\n              Большой объем\n              <input\n                type=\"radio\"\n                name=\"dataSelect\"\n                id=\"large\"\n                value={LARGE_SET}\n                onClick={onRAdioHandler}\n                className=\"data-select-form__radiobutton\"\n              />\n            </label>\n          </form>\n        </div>\n      ) : (\n        <TableApp set={selectedData} />\n      )}\n    </>\n  );\n}\n\nexport default AppMain;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppMain from './components/AppMain';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppMain />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","export const SMALL_SET = 'SMALL_SET';\nexport const LARGE_SET = 'LARGE_SET';\n\n// API links\n\nexport const urlAPI = {\n  SMALL_SET: \"http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D\",\n  LARGE_SET: \"http://www.filltext.com/?rows=1000&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&delay=3&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D\"\n}\n\n\n// Table\n\nexport const tableheaders = [\n  'id',\n  'firstName',\n  'lastName',\n  'email',\n  'phone',\n];"],"sourceRoot":""}